version: "3.8"
services:
    database:
      image: postgres:${POSTGRES_VERSION-13}
      container_name: postgres
      restart: always
      environment:
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_DB: ${POSTGRES_DB}
      volumes:
        - database-data:/var/lib/postgresql/data
      networks:
        - static-network
      ports:
        - 5432:5432

    consul-server:
      image: consul-server
      build:
        context: .
        dockerfile: Dockerfile
        target: consulServer
      networks:
        static-network:
          ipv4_address: 172.16.0.2
 
    gateway:
      image: gateway
      build:
        context: .
        dockerfile: Dockerfile
        target: gatewayRuntime
      ports: 
        - "8080:8080"
      networks:
        - static-network
      depends_on:
        - consul-server


    agent-order-service:
      build: 
        context: .
        dockerfile: Dockerfile
        target: agentOrderServiceRuntime
      container_name: agent-order
      environment:
        DATABASE_USERNAME: ${DATABASE_USERNAME}
        DATABASE_PASSWORD: ${DATABASE_PASSWORD}
        DATABASE_DOMAIN: ${DATABASE_DOMAIN}
        DATABASE_SCHEMA: ${DATABASE_SCHEMA}
        STAGE: ${STAGE}
      depends_on:
        - database
        - consul-server
      networks:
        - static-network
        
    agent-product-service:
      build: 
        context: .
        dockerfile: Dockerfile
        target: agentProductServiceRuntime
      container_name: agent-product
      environment:
        DATABASE_USERNAME: ${DATABASE_USERNAME}
        DATABASE_PASSWORD: ${DATABASE_PASSWORD}
        DATABASE_DOMAIN: ${DATABASE_DOMAIN}
        DATABASE_SCHEMA: ${DATABASE_SCHEMA}
        STAGE: ${STAGE}
      depends_on:
        - database
        - consul-server
      networks:
        - static-network

    agent-report-service:
      build: 
        context: .
        dockerfile: Dockerfile
        target: agentReportServiceRuntime
      container_name: agent-report
      environment:
        DATABASE_USERNAME: ${DATABASE_USERNAME}
        DATABASE_PASSWORD: ${DATABASE_PASSWORD}
        DATABASE_DOMAIN: ${DATABASE_DOMAIN}
        DATABASE_SCHEMA: ${DATABASE_SCHEMA}
        STAGE: ${STAGE}
      depends_on:
        - database
        - consul-server
      networks:
        - static-network

volumes:
  database-data:
    name: server-database


networks:
  static-network:
    ipam:
      config:
        - subnet: 172.16.0.0/16